openapi: 3.0.0
info:
  title: Learning Platform - UserService API
  description: API for managing users and their course enrollments
  version: 1.0.0

servers:
  - url: http://localhost:3000/api
    description: User Service

paths:
  /api/users/register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistration"
      responses:
        "201":
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Invalid input

  /api/users/login:
    post:
      summary: User login
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Invalid credentials

  /api/users/{userId}:
    get:
      summary: Get user profile by ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User profile data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found

  /api/users/courses:
    get:
      summary: Get all available courses
      tags:
        - Courses
      security:
        - bearerAuth: []
      responses:
        "200":
          description: List of all available courses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    courseId:
                      type: string
                      example: "course123"
                    courseName:
                      type: string
                      example: "Introduction to Node.js"
                    description:
                      type: string
                      example: "Learn the basics of Node.js"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2025-03-15T10:30:00Z"
        "500":
          description: Failed to fetch available courses

components:
  schemas:
    UserRegistration:
      type: object
      required:
        - name
        - email
        - password
        - role
      properties:
        name:
          type: string
          example: "Jane Smith"
        email:
          type: string
          format: email
          example: "jane.smith@example.com"
        password:
          type: string
          example: "securePassword123"
        role:
          type: string
          enum: [student, instructor]
          example: "student"

    UserLogin:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "jane.smith@example.com"
        password:
          type: string
          example: "securePassword123"

    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: "jane.smith@example.com"
        name:
          type: string
          example: "Jane Smith"
        role:
          type: string
          enum: [student, instructor]
          example: "student"
        createdAt:
          type: string
          format: date-time
          example: "2025-03-15T10:30:00Z"

    EnrolledCourse:
      type: object
      properties:
        enrollmentId:
          type: string
          example: "enr123"
        courseId:
          type: string
          example: "course789"
        courseName:
          type: string
          example: "Introduction to Node.js"
        enrollmentDate:
          type: string
          format: date-time
          example: "2025-03-15T10:30:00Z"
        progress:
          type: integer
          minimum: 0
          maximum: 100
          example: 65
        lastAccessed:
          type: string
          format: date-time
          example: "2025-04-12T14:22:10Z"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
